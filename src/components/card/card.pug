include ../info-icon/info-icon.pug
include ../room-number/room-number.pug
include ../room-price/room-price.pug
include ../text-field/text-field.pug
include ../dropdown/dropdown.pug
include ../toggle/toggle.pug
include ../radio/radio.pug
include ../button/button.pug
include ../price-calc/price-calc.pug
include ../heading/heading.pug
include ../date-dropdown/date-dropdown.pug

mixin card({ formMethod="", formAction="error-page", title="", type="", buttonText="", buttonType="", question="", numberOfGuests=0 })

  -
    const questionButton = question.toLowerCase().indexOf("нет") !== -1 ? "Создать" : "Войти"
    const questionButtonLink = questionButton === "Создать" ? "registration-page" : "sing-in-page"
    const isSearch = (type === "search")
    const isRegistration = (type === "registration")
    const isCalculation = (type === "calculation")
    const isEntry = (type === "entry")
    const isSearchOrCalculation = (isSearch || isCalculation)

  .card
    if (isCalculation)
      .card__title-calculation
        +room-number({ symbol: "№", value: "888", text: "люкс" })
        +room-price({ value: "9 990", text: "в сутки" })
    else
      .card__title
        +heading({ level: "h1", title: title })
    form(method=`${formMethod}`, action=`./${formAction}.html`)
      if (isSearchOrCalculation)
        section.card__date-dropdown
          +date-dropdown({ 
            type: "text",
            dataType: "date-dropdown-start",
            dataTypeEnd: "date-dropdown-end",
            placeholder: "ДД.ММ.ГГГГ",
            size: "small",
            name: "date",
            autocomplete: "off", 
            hasArrow: true,
            hasTwoInputs: true,
            startTitle: "прибытие",
            endTitle: "выезд",
          })
        div(class=isSearch ? "card__guests-dropdown-search" : "card__guests-dropdown")
          +heading({ level: "h3", title: "гости" })
          +dropdown({
            isOpen: false, 
            group: "guests", 
            elements: [
              { title: "Взрослые", count: numberOfGuests },
              { title: "Дети", count: 0 }, 
              { title: "Младенцы", count: 0 },
            ]
          })
        if isCalculation
          .card__calculation
            +price-calc()

      else if (isRegistration)
        section.card__register-details
          .card__register-details-name
            +text-field({ placeholder: "Имя", type: "text", name: "name", autocomplete: "on" })
          .card__register-details-surname
            +text-field({ placeholder: "Фамилия", type: "text", name: "surname", autocomplete: "on" })
        section.card__sex
          +radio({ group: "gender", title: "Мужчина", checked: true })
          +radio({ group: "gender", title: "Женщина", checked: false })
        .card__birthday
          +heading({ level: "h3", title: "дата рождения" })
          +text-field({
            dataType: "masked-text-field",
            placeholder: "ДД.ММ.ГГГГ",
            type: "text",
            name: "birthday",
            autocomplete: "on",
          })
        section.card__login-details
          +heading({ level: "h3", title: "данные для входа в сервис" })
          .card__login-details-email
            +text-field({ placeholder: "Email", type: "email", name: "email", autocomplete: "on" })
          .card__login-details-password
            +text-field({ placeholder: "Пароль", type: "password", name: "password", autocomplete: "on" })
        .card__special-offers-subscription
          +toggle({ title: "Получать спецпредложения" })

      else if (isEntry)
        section.card__login-details
          .card__login-details-email
            +text-field({ placeholder: "Email", type: "email", name: "email", autocomplete: "on" })
          .card__login-details-password
            +text-field({ placeholder: "Пароль", type: "password", name: "password", autocomplete: "on" })
      //- Add button
      if (buttonText !== "")
        .card__submit-button
          +button({
            buttonName: buttonText,
            type: buttonType,
            buttonVariation: "withArrow",
            textColor: "white",
            size: "large",
          })
      //- Add question
      if (question !== "")
        .card__question
          span.card__question-text #{question}
          .card__question-button
            +button({
              buttonName: questionButton,
              buttonVariation: "fillWhite",
              textColor: "purple",
              size: "small",
              link: questionButtonLink,
            })