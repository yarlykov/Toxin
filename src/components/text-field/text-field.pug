mixin text-field({ type="", dataType="", placeholder="", size="", name="", autocomplete="off", focused=false, lowercase=false, spellcheck=false, subscribe=false, arrow=false, readonly=false })

  -
    const mainClass = "text-field__input"
    const sizeClass = `text-field_size_${size}`
    const focusedClass = focused ? "text-field_focused" : ""
    const textLowercaseClass = lowercase ? "text-field__input_lowercase-text" : ""
    const inputWithoutArrowClass = subscribe ? "text-field__input_without-arrow" : ""

    let inputAttributes = {
      class: [mainClass, maskedClass, filterDropdown, textLowercaseClass, inputWithoutArrowClass],
      type: type,
      "data-type": dataType,
      name: name,
      autocomplete: autocomplete,
      placeholder: placeholder,
      spellcheck: spellcheck,
      readonly: readonly,
    }

  .text-field(class=[focusedClass, sizeClass])
    input&attributes(inputAttributes)
    if arrow
      div(class="text-field__arrow-down")&attributes({"data-type": "arrow", onmousedown: "return false"})
    if subscribe
      button&attributes({
        class: ["text-field__arrow-subscribe", "text-field__arrow-subscribe_with-gradient-fill"],
        type: "button",
        name: "subscribe"
      })